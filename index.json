
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Wang Xupeng is currently the head of the Big Data Center at Nanyang Commercial Bank, overseeing the entire bank’s fintech applications. He was formerly the head of the AI Lab at Nanjing Aerospace Data Intelligence Technology Co., Ltd. (Shenzhen Aerospace Industry Research Institute), a member of the Expert Committee, and part of the Excellence Talent Introduction Program. Wang Xupeng holds a dual master’s degree in statistics from Hong Kong Baptist University and the University of Kent in the UK. He is passionate about NLP, OCR, and multimodal technologies and has achieved significant accomplishments, such as 12th in ICDAR 2021 competition on scientific literature parsing taskB: table recognition to HTML and winning the national championship in the Legal AI Challenge (jointly organized by Tsinghua University and China Judicial Big Data Research Institute): Legal Case Element Recognition track in 2019. During his work, he led the construction of the AI platform at the Shenzhen Aerospace Industry Research Institute, the development of the chatbot platform, and the intelligent case assistance system for the Jiangsu Provincial Procuratorate, among other projects. You can find some interesting AI applications he has worked on on the projects page.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Wang Xupeng is currently the head of the Big Data Center at Nanyang Commercial Bank, overseeing the entire bank’s fintech applications. He was formerly the head of the AI Lab at Nanjing Aerospace Data Intelligence Technology Co.","tags":null,"title":"Xupeng Wang","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://wangxupeng.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"The latest version of table recognition. The video mainly showcases a demo of complex and wireless tables. This project was developed in 2021, utilizing multimodal technology. In the following, we will introduce the technical details of the project. The overall project is divided into two stages. In the first stage, the image is input into the OCR model to obtain the coordinate information (bounding boxes) and corresponding text content. Then, the text positions are sorted from top to bottom and left to right based on the coordinate information. The input of the second stage includes the coordinate information and content of the text, as well as the sorted text positions information, and the output is the tree structure of the table. As for what the tree structure of the table is, I will explain it later.\nFirst stage The first stage used the DBnet[1]+CRNN[2] model, which needs no further elaboration.\nSecond stage In the training data, we already have annotated text box coordinates, text content, and the sorting information of text boxes from top to bottom and from left to right, as shown in the following figure:\nAs shown in the above figure, there may be two special cases during the sorting process. In the process of reorganizing the table structure, empty text boxes may be required and they are marked with the label number 0. Secondly, in the case of multiple lines of text appearing in a table cell, two rows of text boxes will appear, which need to be sorted from top to bottom.\nAfter introducing the input data, let’s take a look at the left part of the model. We input the bounding boxes and the index for sorting bounding boxes into PointerNet[3]. PointerNet[3] proposes a novel neural network architecture, called Pointer Networks, which is able to generate pointers to input sequences based on the relationship between the input sequence and target sequence. The main application of Pointer Networks is to solve problems with sequential structure, such as sequence-to-sequence translation and path planning. Compared to traditional recurrent neural networks (RNNs) or convolutional neural networks (CNNs), Pointer Networks have better expressive power and significant advantages in terms of computational efficiency.It is very appropriate to use PointerNet[3] here to predict the tree structure of the table.\nNext comes the important step of defining the label. Using the previous image as an example, we can see that each cell in the table has a parent cell that it points to in the upward direction. We refer to the cell being pointed to as the parent node. It can be observed that the parent nodes for all the topmost cells, i.e., cells 0, 1, 3, and 4, are -1. The parent nodes for cells 6, 8, 9, and 10 are 0, 2, 3, and 5, respectively.\nThe right side of the model mainly involves inputting the text content into the Bert[4], and then concatenating the output tensor with the tensor output from PointerNet.\nOkay, now let’s take a look at what the input and output are for the entire second stage.\nInput_1 = [0,1,2,3,4,5,6,7,8,9,10] Input_2 = corresponding bounding boxes Input_3 = corresponding text content output = [-1,-1,1,-1,-1,4,0,6,2,3,5] This is just the label for the bottom-up direction. We have applied similar labeling for all four directions, as shown in the following figure: After our repeated experiments, we found that using the bottom-up labeling scheme can solve 98% of the problems in our project. We used this approach to participate in the ICDAR 2021 competition on scientific literature parsing taskB: table recognition to HTML and achieved the 12th place.\nThe earlier version of table recognition. The above video demonstrates the initial version of my designed table recognition system (The content in this video was produced in 2021, but the technical implementation was achieved around 2018). The approach mainly relies on the implementation of DBnet[1] to detect the coordinates of the text within the table that needs to be extracted from the image. Based on these coordinates, the corresponding text images are sliced out. Subsequently, these text images are input into CRNN[2] for text recognition. Finally, some post-processing operations are applied to restore the style of the table. When using this system, the number of rows and columns of the table need to be inputted for display purposes in the frontend.\nIn other versions, we made some improvements based on the customer’s needs. The customer required that the text should be highlighted on the image when the mouse clicks on it. Therefore, some modifications were made to the post-processing of CRNN [2]. The code is as follows:\ntotal_axis = [] # create an empty list to store the coordinates of each character recognized in the image tmp = np.array(im) # convert the image into a numpy array i = 0 # set the index to 0 color= (255, 0, 0) # set the color to blue c = color for index, box in enumerate(boxes): # loop through each detected text box # if index \u0026gt; 1: degree, w, h, …","date":1682553600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682553600,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://wangxupeng.github.io/project/example/","publishdate":"2023-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"A brief introduction to the Complex Table Parsing Project, its version iteration contents, and related technical points.All the data used in the demos are test data.","tags":["Deep Learning"],"title":"Complex Table Parsing Project","type":"project"},{"authors":null,"categories":null,"content":"Task Introduction The main objective of this task is to automatically extract important factual descriptions from case descriptions, and classify them according to a case element system designed by domain experts. Essentially, it is a short-text multilabel classification problem.\nThe results of case element extraction can be used in practical business requirements in the judicial field, such as case summaries, explainable case recommendations, and related knowledge recommendations.\nSpecifically, given relevant paragraphs in judicial documents, the system needs to judge each sentence in the document and identify the key case elements.\nThis task involves three domains, including marriage and family, labor disputes, and loan contracts.\nData Introduction The dataset used for this task mainly comes from the publicly available legal documents on the ‘China Judgments Online’ website. Each training data consists of a segment of the case description from a legal document, where each sentence has been labeled with corresponding category tags (it should be noted that the number of category tags for each sentence is not fixed). For example:\n{“labels”: [“DV9”, “DV1”, “DV2”], “sentence”: “The plaintiff Xie Chunyou claimed that the plaintiff and defendant divorced in March 2014 due to emotional discord as ruled by the Hengyang County People’s Court, and ruled that their daughter Zhou Yin (born on September 8, 2001, now studying at Zhengyang Middle School, Xidu Town, Hengyang County) would be raised by the defendant.”}; DV represents the divorce category.\n{“labels”: [“LB2”, “LB3”], “sentence”: “The plaintiff Zhang Qian filed a lawsuit with the court and requested: 1. To order the defendant to make up the plaintiff’s salary of 7200 yuan and compensation of 2400 yuan.”}; LB represents the labor category.\n{“labels”: [“LN2”, “LN6”, “LN4”], “sentence”: “This court finds the facts as follows: The defendant’s brothers holdings group limited company borrowed three loans from the Industrial and Commercial Bank of China Yongkang Branch, with a total principal of RMB 40 million, as follows:”}; LN represents the loan category.\nLabel contents are as follows: Divorce = [\u0026#34;Children born during marriage\u0026#34;, \u0026#34;Child custody for children with limited capacity for civil conduct\u0026#34;, \u0026#34;Common property of husband and wife\u0026#34;, \u0026#34;Payment of child support\u0026#34;, \u0026#34;Division of real estate\u0026#34;, \u0026#34;Separation after marriage\u0026#34;, \u0026#34;Divorce for the second time\u0026#34;, \u0026#34;Monthly payment of child support\u0026#34;, \u0026#34;Granting of divorce\u0026#34;, \u0026#34;Common debt of husband and wife\u0026#34;, \u0026#34;Personal property before marriage\u0026#34;, \u0026#34;Statutory divorce\u0026#34;, \u0026#34;Failure to perform family obligations\u0026#34;, \u0026#34;Existence of illegitimate child\u0026#34;, \u0026#34;Proper assistance\u0026#34;, \u0026#34;Failure to fulfill divorce agreement\u0026#34;, \u0026#34;Compensation for damages\u0026#34;, \u0026#34;Living separately for more than two years due to emotional discord\u0026#34;, \u0026#34;Children living with non-custodial parent\u0026#34;, \u0026#34;Personal property after marriage\u0026#34;] Labor = [\u0026#34;Termination of Labor Relationship\u0026#34;, \u0026#34;Payment of Wages\u0026#34;, \u0026#34;Payment of Economic Compensation\u0026#34;, \u0026#34;Unpaid Full Labor Remuneration\u0026#34;, \u0026#34;Existence of Labor Relationship\u0026#34;, \u0026#34;No Labor Contract Signed\u0026#34;, \u0026#34;Signed Labor Contract\u0026#34;, \u0026#34;Payment of Overtime Pay\u0026#34;, \u0026#34;Payment of Double Wages Compensation for No Signed Labor Contract\u0026#34;, \u0026#34;Payment of Work-Related Injury Compensation\u0026#34;, \u0026#34;No Labor Arbitration Filed\u0026#34;, \u0026#34;Refusal to Pay Illegal Termination Compensation\u0026#34;, \u0026#34;Economic Layoff\u0026#34;, \u0026#34;No Payment of Bonuses\u0026#34;, \u0026#34;Illegally Collecting Property from Employees\u0026#34;, \u0026#34;Special Job Categories\u0026#34;, \u0026#34;Payment of Subsidies for Work Injury, Funeral or Bereavement\u0026#34;, \u0026#34;Advance Notification of Termination by Employer\u0026#34;, \u0026#34;Legal Person Status Ceased\u0026#34;, \u0026#34;Agreement Reached through Mediation\u0026#34;] Loan = [\u0026#34;Transfer of creditor\u0026#39;s rights\u0026#34;, \u0026#34;Loan amount of x thousand yuan\u0026#34;, \u0026#34;Loan certificate available\u0026#34;, \u0026#34;Lender is a financial institution\u0026#34;, \u0026#34;Repayment of loan\u0026#34;, \u0026#34;Loan borrowed by company|unit|other organization\u0026#34;, \u0026#34;Joint guarantee\u0026#34;, \u0026#34;Reminder for repayment\u0026#34;, \u0026#34;Payment of interest\u0026#34;, \u0026#34;Establishment of guarantee contract\u0026#34;, \u0026#34;Written promise of repayment available\u0026#34;, \u0026#34;Invalid|revoked|terminated guarantee contract\u0026#34;, \u0026#34;Refusal to perform repayment\u0026#34;, \u0026#34;Release of guarantor\u0026#39;s guarantee responsibility\u0026#34;, \u0026#34;Guarantor not assuming guarantee responsibility\u0026#34;, \u0026#34;Pledgor is a company\u0026#34;, \u0026#34;Lender fails to provide loan as agreed in terms of date or amount\u0026#34;, \u0026#34;Loan borrowed by multiple individuals\u0026#34;, \u0026#34;Transfer of debt by debtor\u0026#34;, \u0026#34;Unclear agreed interest rate\u0026#34;] Split multi-labels into single labels and then count: We can see that the marriage and family category accounts for 22% of the elements. Labor disputes category accounts for 11% of the elements. Loan contracts category accounts for 15% of the elements. Most of the sentences do not have relevant element information.\nThe distribution of data for the top 20 categories of marriage and family: The distribution of data for the top 20 categories of labor disputes: The distribution of data for the top 20 categories of loan contracts: From the above three graphs, it can be seen that the data follows a …","date":1682553600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682553600,"objectID":"7ba0882232430220f1079a0c2aa44050","permalink":"https://wangxupeng.github.io/project/legal-ai-challenge/","publishdate":"2023-04-27T00:00:00Z","relpermalink":"/project/legal-ai-challenge/","section":"project","summary":"I mentored a recent graduate and together we won the national championship in the Legal AI Challenge (Legal Case Element Recognition track) in 2019, jointly organized by Tsinghua University and China Judicial Big Data Research Institute.","tags":["Deep Learning"],"title":"Legal AI Challenge: Legal Case Element Recognition solution.","type":"project"},{"authors":["Xupeng Wang","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://wangxupeng.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://wangxupeng.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Xupeng Wang"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://wangxupeng.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Xupeng Wang"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://wangxupeng.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://wangxupeng.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Xupeng Wang","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://wangxupeng.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Xupeng Wang","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://wangxupeng.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]